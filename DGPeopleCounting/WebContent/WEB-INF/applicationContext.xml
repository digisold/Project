<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            ">

	<!-- 配置jdbc.properties的路径 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置bonecp -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="idleMaxAge" value="${jdbc.idleMaxAge}" />
		<property name="partitionCount" value="${jdbc.partitionCount}" />
		<property name="minConnectionsPerPartition" value="${jdbc.minConnectionsPerPartition}" />
		<property name="maxConnectionsPerPartition" value="${jdbc.maxConnectionsPerPartition}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="statementsCacheSize" value="${jdbc.statementsCacheSize}" />
		<property name="releaseHelperThreads" value="${jdbc.releaseHelperThreads}" />
	</bean>


	<!-- Mybatis -->
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="plugins">
			<array>
				<bean class="com.digisold.web.mybatis.interceptor.QueryInterceptor" />
			</array>
		</property>
		<!-- 自动扫描Mapper.xml文件 -->
		<property name="mapperLocations"
			value="classpath:com/digisold/web/mybatis/mapper/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.digisold.web.mybatis.dao" />
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- END -->

	<bean id="roleService" class="com.digisold.web.manage.system.service.impl.RoleImpl" />
	<bean id="userService" class="com.digisold.web.manage.system.service.impl.UserImpl" />
</beans>